version: 1
kind: Service
metadata:
    name: simple-service
    namespace: default
dependsOn:
    - combined.Server.simple-server
spec:
    containers:
        - name: users-service
          containerName: users
          dockerfile: some_path
          ports:
            - 8080:8080
            - 50051:50051
          env:
            clean: clean-command
            db_url: postgres:5432
            run: run-command
          replicas: 3
          healthPath: /health
        - name: auth-service
          containerName: auth
          image: some_path
          ports:
            - 8081:8081
            - 50052:50052
          env:
            db_url: postgres:5432
          replicas: 6
          healthPath: /health
---
version: 1
kind: Server
metadata:
    name: simple-server
    namespace: combined
spec:
    baseUrl: http://localhost:8080
    headers:
        Content-Type: application/json
---
version: 1
kind: HttpTest
metadata:
    name: simple-http-test
    namespace: combined
dependsOn:
    - combined.Service.simple-service
spec:
    target: simple-server
    cases:
        - name: user-register
          method: POST
          endpoint: /register
          headers:
            Authorization: some_jwt_token
            type: some_data
          body:
            email: example_email
            password: example_password
            username: example_username
          expected:
            code: 201
            message: User successfully registered
          timeout: 1s
          async: true
          repeats: 20
        - name: user-login
          method: GET
          endpoint: /login
          body:
            email: example_email
            password: example_password
          expected:
            code: 200
        - name: user-fetch
          method: GET
          endpoint: /users/{id}
          expected:
            code: 404
            message: User not found
---
version: 1
kind: HttpLoadTest
metadata:
    name: simple-http-load-test
    namespace: combined
dependsOn:
    - combined.HttpTest.simple-http-test
spec:
    target: simple-service.users-service
    cases:
        - name: user-login
          method: GET
          endpoint: /login
          body:
            email: example_email
            password: example_password
          expected:
            code: 200
        - name: user-fetch
          method: GET
          endpoint: /users/{id}
          expected:
            code: 404
            message: User not found
